Arduino Projekt: 8 LEDs mit Port L steuern
==========================================

Einführung für Anfänger
~~~~~~~~~~~~~~~~~~~~~~~

Hallo! In diesem Projekt bauen wir eine coole Licht-Anlage 
mit 8 LEDs, die wir mit dem Arduino steuern. Stell dir vor:
Wir haben 8 Lichtschalter, die wir alle gleichzeitig 
bedienen können - das ist Port L!

Was wir lernen werden:
• Binärzahlen: Die Sprache der Computer
• Hexadezimalzahlen: Kurzschreibweise für Binärzahlen  
• Bit-Shifting: Wie wir Lichter verschieben
• Schleifen: Wie wir Dinge wiederholen
• If-Then-Else: Wie der Arduino Entscheidungen trifft

Benötigte Teile
~~~~~~~~~~~~~~~
⌐─────────────────────────────────────────────────────┐
│ Arduino Mega Board                                  │
│ Steckbrett (Breadboard)                             │
│ 8 x LEDs (beliebige Farben)                         │
│ 8 x 220Ω Widerstände (Rot-Rot-Braun)                │
│ 8-adriges Dupont-Kabel (Male-to-Male)               │
│ Jumper Kabel für Ground-Verbindung                  │
└─────────────────────────────────────────────────────┘

Schaltungsaufbau
~~~~~~~~~~~~~~~~

So baust du die Schaltung auf:

    ARDUINO MEGA                    BREADBOARD
    ┌─────────────┐                 ┌─────────────────────────────────┐
    │             │                 │ R1  LED1  R2  LED2  R3  LED3 ...│
    │    [USB]    │                 │ ⁻⁻⁻∕∕∕⁻  ⁻⁻⁻∕∕∕⁻  ⁻⁻⁻∕∕∕⁻      │
    │             │                 │ |   |    |   |    |   |         │
    │   Port L    │                 │ |   |    |   |    |   |         │
    │ 42 43 44 45 │◄──8-Draht Kabel─┤[A] [B]  [C] [D]  [E] [F] ...   │
    │ 46 47 48 49 │◄───(Stecker)───▶│ |   |    |   |    |   |         │
    │             │                 │ |   |    |   |    |   |         │
    │             │                 │LED+ GND LED+ GND LED+ GND ...  │
    │    [GND]│◄──┼──Jumper Kabel───┼[GND Schiene]───────────────────│
    │         │   │                 │                                 │
    └─────────────┘                 └─────────────────────────────────┘

Verbindungstabelle:
┌─────────────┬────────────┬────────────────┬───────────┐
│ Arduino Pin │ Port L Pin │ Breadboard Reihe│ LED Nummer│
├─────────────┼────────────┼────────────────┼───────────┤
│     42      │    PL7     │      Reihe A   │   LED 1   │
│     43      │    PL6     │      Reihe C   │   LED 2   │
│     44      │    PL5     │      Reihe E   │   LED 3   │
│     45      │    PL4     │      Reihe G   │   LED 4   │
│     46      │    PL3     │      Reihe I   │   LED 5   │
│     47      │    PL2     │      Reihe K   │   LED 6   │
│     48      │    PL1     │      Reihe M   │   LED 7   │
│     49      │    PL0     │      Reihe O   │   LED 8   │
└─────────────┴────────────┴────────────────┴───────────┘

Grundlagen erklärt
~~~~~~~~~~~~~~~~~~

1. Binärzahlen (Dualsystem)
   Computer verstehen nur AN (1) und AUS (0).

   Dezimal:  0  1  2  3  4   5   6   7   8
   Binär:    0  1  10 11 100 101 110 111 1000

   8-Bit Beispiele:
   00000000 = Alle LEDs AUS
   00000001 = Nur rechte LED AN
   11111111 = Alle LEDs AN
   01010101 = Jede zweite LED AN

2. Hexadezimalzahlen (16er-System)
   Kurzschreibweise für Binärzahlen:

   ┌─────┬─────────┬────────────┐
   │ Hex │ Dezimal │ Binär      │
   ├─────┼─────────┼────────────┤
   │  0  │    0    │ 0000       │
   │  1  │    1    │ 0001       │
   │  2  │    2    │ 0010       │
   │ ... │   ...   │ ...        │
   │  9  │    9    │ 1001       │
   │  A  │   10    │ 1010       │
   │  B  │   11    │ 1011       │
   │  C  │   12    │ 1100       │
   │  D  │   13    │ 1101       │
   │  E  │   14    │ 1110       │
   │  F  │   15    │ 1111       │
   └─────┴─────────┴────────────┘

   8-Bit Beispiele:
   0xFF = 11111111 (alle LEDs AN)
   0x55 = 01010101 (jede zweite LED AN)
   0x0F = 00001111 (erste 4 LEDs AN)

3. Bit-Shifting (Bit-Verschiebung)
   Stell dir 8 Lampen vor: [ ][ ][ ][ ][ ][ ][ ][●]

   Links-Shift (<<):
   00000001 << 1 = 00000010  ● bewegt sich nach links
   00000001 << 2 = 00000100  ● noch weiter links
   00000001 << 3 = 00001000  ● und weiter...

4. For-Schleifen
   Wiederhole einen Codeblock mehrmals:

   // Zähle von 0 bis 7
   for(int i = 0; i < 8; i++) {
     // Wird 8x ausgeführt: i=0,1,2,3,4,5,6,7
   }

   // Zähle rückwärts  
   for(int i = 7; i >= 0; i--) {
     // i=7,6,5,4,3,2,1,0
   }

5. If-Then-Else (Bedingungen)
   Der Arduino trifft Entscheidungen:

   if (antwort == "y") {
     // Mache dies, wenn WAHR
     Serial.println("Super! Alles funktioniert.");
   } else {
     // Mache das, wenn FALSCH
     Serial.println("Hmm, prüfe die Verbindungen.");
   }

Der kommentierte Sketch
~~~~~~~~~~~~~~~~~~~~~~~

Jetzt kommt der Arduino Code - aber keine Sorge! 
Er enthält so viele Kommentare, dass er sich selbst erklärt.
Jede Zeile wird dir sagen, was sie tut und warum.

Das Projekt wird:
1. Einen Knight-Rider Scanner zeigen (wie K.I.T.T.)
2. Verschiedene Lichtmuster testen
3. Jede LED einzeln prüfen
4. Binärzählen demonstrieren

Bist du bereit? Lass uns beginnen! 
Der Sketch wartet schon auf dich... 🚀